---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app adventurelog
  namespace: &namespace default
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      adventurelog:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
            envFrom: &envFrom
              - secretRef:
                  name: &secret adventurelog-secret
        containers:
          frontend:
            image:
              repository: ghcr.io/seanmorley15/adventurelog-frontend
              tag: latest
            env:
              PUBLIC_SERVER_URL: "https://adventurelog.vaderrp.com"
              ORIGIN: "https://adventurelog.vaderrp.com"
              BODY_SIZE_LIMIT: "Infinity"
            ports:
              - name: http
                containerPort: 3000
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 512Mi
          backend:
            image:
              repository: ghcr.io/seanmorley15/adventurelog-backend
              tag: latest
            env:
              PGHOST:
                valueFrom:
                  secretKeyRef:
                    name: adventurelog-secret
                    key: INIT_POSTGRES_HOST
              PGDATABASE:
                valueFrom:
                  secretKeyRef:
                    name: adventurelog-secret
                    key: POSTGRES_DB
              PGUSER:
                valueFrom:
                  secretKeyRef:
                    name: adventurelog-secret
                    key: POSTGRES_USER
              PGPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: adventurelog-secret
                    key: POSTGRES_PASSWORD
              PGPORT: "5432"
              PUBLIC_URL: "https://adventurelog.vaderrp.com"
              FRONTEND_URL: "https://adventurelog.vaderrp.com"
              CSRF_TRUSTED_ORIGINS: "https://adventurelog.vaderrp.com"
              DEBUG: "False"
            envFrom: *envFrom
            ports:
              - name: http
                containerPort: 8000
            volumeMounts:
              - name: media
                mountPath: /code/media
            probes:
              liveness: &backendProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health/
                    port: 8000
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *backendProbes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: adventurelog
        ports:
          http:
            primary: true
            port: 3000
            targetPort: 3000
          backend:
            port: 8000
            targetPort: 8000
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.vaderrp.com"
        hosts:
          - host: adventurelog.vaderrp.com
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
              - path: /api
                service:
                  identifier: app
                  port: backend
              - path: /admin
                service:
                  identifier: app
                  port: backend
    persistence:
      config:
        existingClaim: adventurelog
      media:
        type: nfs
        server: 192.168.0.221
        path: /mnt/Nakkiallas/Media/Photos/AdventureLog
        globalMounts:
          - path: /code/media
