---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app adventurelog
  namespace: &namespace default
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      adventurelog:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6
              pullPolicy: IfNotPresent
            command:
              - /bin/bash
              - -c
              - |
                # Run the original postgres-init script
                /scripts/init.sh

                # Create PostGIS extension as superuser
                echo "Creating PostGIS extension..."
                PGPASSWORD="$INIT_POSTGRES_SUPER_PASS" psql -h "$INIT_POSTGRES_HOST" -U postgres -d "$POSTGRES_DB" -c "CREATE EXTENSION IF NOT EXISTS postgis;"
                echo "PostGIS extension created successfully"
            envFrom: &envFrom
              - secretRef:
                  name: &secret adventurelog-secret
        containers:
          frontend:
            image:
              repository: ghcr.io/seanmorley15/adventurelog-frontend
              tag: latest@sha256:eeff34a4a7d8e9b0942c257fd7a50d47b3adbe141c7eba78df36cd3b441c0eaf
            env:
              PUBLIC_SERVER_URL: "https://adventurelog-backend.vaderrp.com"
              BODY_SIZE_LIMIT: "1000000"
            ports:
              - name: http
                containerPort: 3000
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
              startup: *probes
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                memory: 512Mi
          backend:
            image:
              repository: ghcr.io/seanmorley15/adventurelog-backend
              tag: latest@sha256:1b67bf6732046b4b82b96c0e2dfad65fcf8684cd07ce9cfed422b484e562b3b5
            env:
              PGHOST:
                valueFrom:
                  secretKeyRef:
                    name: adventurelog-secret
                    key: INIT_POSTGRES_HOST
              PGDATABASE:
                valueFrom:
                  secretKeyRef:
                    name: adventurelog-secret
                    key: POSTGRES_DB
              PGUSER:
                valueFrom:
                  secretKeyRef:
                    name: adventurelog-secret
                    key: POSTGRES_USER
              PGPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: adventurelog-secret
                    key: POSTGRES_PASSWORD
              PGPORT: "5432"
              PUBLIC_URL: "https://adventurelog-backend.vaderrp.com"
              FRONTEND_URL: "https://adventurelog.vaderrp.com"
              CSRF_TRUSTED_ORIGINS: "https://adventurelog-backend.vaderrp.com,https://adventurelog.vaderrp.com"
              DEBUG: "true"
            envFrom: *envFrom
            ports:
              - name: http
                containerPort: 8000
            probes:
              liveness: &backendProbes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: 8000
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *backendProbes
              startup: *backendProbes
            resources:
              requests:
                cpu: 125m
                memory: 500Mi
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: adventurelog
        ports:
          http:
            port: 3000
          backend:
            port: 8000
    ingress:
      app:
        enabled: false
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.vaderrp.com"
    persistence:
      config:
        enabled: true
        existingClaim: adventurelog
        globalMounts:
          - path: /code/media
