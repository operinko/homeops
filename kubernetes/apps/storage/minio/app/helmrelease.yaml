---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
  namespace: storage
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2025-02-28T09-55-16Z@sha256:a929054ae025fa7997857cd0e2a2e3029238e31ad89877326dc032f4c1a14259
            env:
              TZ: "Europe/Helsinki"
              MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.observability:9090
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_BROWSER_REDIRECT_URL: https://minio.vaderrp.com
              #MINIO_SERVER_URL: https://s3.vaderrp.com
              MINIO_PROMETHEUS_AUTH_TYPE: "public"
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.vaderrp.com,https://s3.vaderrp.com
              MINIO_UPDATE: "off"
            envFrom:
              - secretRef:
                  name: minio-secret
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        controller: minio
        ports:
          http:
            port: 9001
          s3:
            port: 9000

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: S3 storage
          gethomepage.dev/group: Storage
          gethomepage.dev/icon: sh-minio.svg
          gethomepage.dev/name: Minio
          gethomepage.dev/app: minio
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/server-snippet: |
            client_max_body_size 0;
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
          nginx.ingress.kubernetes.io/proxy-read-timeout: "60s"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "60s"
        hosts:
          - host: minio.vaderrp.com
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
          - host: s3.vaderrp.com
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: s3

    persistence:
      data:
        enabled: true
        existingClaim: minio
